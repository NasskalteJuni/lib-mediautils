<!doctype html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title><%=title%></title>
    <link href="style.css" rel="stylesheet" type="text/css">
    <!--<script src="https://cdnjs.cloudflare.com/ajax/libs/webrtc-adapter/7.3.0/adapter.min.js"></script>-->
    <script src="mediautils.js"></script>
    <style>
        #display{
            width: 640px;
            height: 480px;
            background-color: black;
        }
    </style>
</head>
<body>
<aside id="users">
</aside>
<main>
    <div id="display"></div>
    <button id="addMedia">Join Conference</button>
</main>
<script>
    function updateUserList(users){
        const container = document.getElementById("users");
        container.innerHTML = "";
        const ul = document.createElement("ul");
        users.forEach(u => {
            const li = document.createElement("li");
            li.innerText = u;
            ul.appendChild(li);
        })
        container.appendChild(ul);
    }

    function addSwitchButton(conference){
        const button = document.createElement('button');
        button.id = 'changearchitecture';
        button.innerText = 'change architecture (currently '+conference.architecture+')';
        button.addEventListener('click', () => conference.switchArchitecture());
        conference.addEventListener('architectureswitched', architecture => button.innerText = 'change architecture (currently '+architecture+')');
        document.querySelector('main').appendChild(button);
    }
</script>
<script>
    const display = document.getElementById('display');
    const name = new URLSearchParams(location.search).get('user');
    let architecture = 'mesh';
    let cam = null;
    const verbose = true;
    const signaler = new MediaUtilities.Signaler({endpoint: location.origin.replace(/^http/,'ws')});
    const conference = new MediaUtilities.Conference({name, signaler, verbose});
    const addMediaButton = document.getElementById("addMedia");
    conference.displayOn(display);
    conference.addEventListener('userconnected', () => updateUserList(conference.members))
    conference.addEventListener('userdisconnected', () => updateUserList(conference.members));
    addMediaButton.addEventListener("click", async () => {
        cam = conference.addWebcam({video: {width: {exact: 640}, height: {exact: 480}}, audio: true});
        addMediaButton.parentNode.removeChild(addMediaButton);
        addSwitchButton(conference);
    });
    window.addEventListener('beforeunload', () => connections.close());
</script>
</body>
</html>